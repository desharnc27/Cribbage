memberSearchIndex = [{"p":"mainpackage","c":"CribChoiceHeuri","l":"addTo(float[][], float[][], float)","url":"addTo(float[][],float[][],float)"},{"p":"mainpackage","c":"CCHBunch","l":"addTo(float[][], float[][], int)","url":"addTo(float[][],float[][],int)"},{"p":"mainpackage","c":"UnsuitedMeths","l":"allDiff(int[], int)","url":"allDiff(int[],int)"},{"p":"mainpackage","c":"Aragula","l":"Aragula()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"UnsuitedMeths","l":"averageHandScore(int[], int[])","url":"averageHandScore(int[],int[])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"bigShitt(boolean)"},{"p":"mainpackage","c":"UnsuitedMeths","l":"bigShitt(float[][], boolean, int)","url":"bigShitt(float[][],boolean,int)"},{"p":"mainpackage","c":"CombMeths","l":"boolIter(boolean[])"},{"p":"mainpackage","c":"Card","l":"Card(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"mainpackage","c":"Card","l":"Card(int)","url":"%3Cinit%3E(int)"},{"p":"mainpackage","c":"CCHBunch","l":"CCHBunch(CribChoiceHeuri[], float[])","url":"%3Cinit%3E(mainpackage.CribChoiceHeuri[],float[])"},{"p":"mainpackage","c":"CombMeths","l":"combine(int, int)","url":"combine(int,int)"},{"p":"mainpackage","c":"CombMeths","l":"combIter(int[], int)","url":"combIter(int[],int)"},{"p":"mainpackage","c":"CombMeths","l":"CombMeths()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"Card","l":"compareTo(Card)","url":"compareTo(mainpackage.Card)"},{"p":"mainpackage","c":"Aragula","l":"compo(int[], int[])","url":"compo(int[],int[])"},{"p":"mainpackage","c":"SuitedMeths","l":"computeCribAverage(Card[], Card[], float[][])","url":"computeCribAverage(mainpackage.Card[],mainpackage.Card[],float[][])"},{"p":"mainpackage","c":"SuitedMeths","l":"computeCribAverage(Card[], Card[])","url":"computeCribAverage(mainpackage.Card[],mainpackage.Card[])"},{"p":"mainpackage","c":"SuitedMeths","l":"computeHandAverage(Card[], Card[])","url":"computeHandAverage(mainpackage.Card[],mainpackage.Card[])"},{"p":"mainpackage","c":"Aragula","l":"copy(ArrayList<T>)","url":"copy(java.util.ArrayList)"},{"p":"mainpackage","c":"Aragula","l":"copy(int[])"},{"p":"mainpackage","c":"Aragula","l":"copyIn(int[], int[])","url":"copyIn(int[],int[])"},{"p":"mainpackage","c":"PointCounting","l":"countPoints(Card, Card[], boolean)","url":"countPoints(mainpackage.Card,mainpackage.Card[],boolean)"},{"p":"mainpackage","c":"DataNumbers","l":"create5ScoreList()"},{"p":"mainpackage","c":"DataNumbers","l":"createPascal()"},{"p":"mainpackage","c":"CribChoiceHeuri","l":"CribChoiceHeuri(int[], float)","url":"%3Cinit%3E(int[],float)"},{"p":"mainpackage","c":"Database","l":"Database()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"DataNumbers","l":"DataNumbers()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"SuitedMeths","l":"debugEqualizer"},{"p":"mainpackage","c":"Aragula","l":"detSg(int[])"},{"p":"mainpackage","c":"Labels","l":"df(int, double)","url":"df(int,double)"},{"p":"mainpackage","c":"PointCounting","l":"fifteenPoints(Card[])","url":"fifteenPoints(mainpackage.Card[])"},{"p":"mainpackage","c":"PointCounting","l":"fifteenPoints(int[])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"fill5()"},{"p":"mainpackage","c":"NumCombo","l":"fillScore()"},{"p":"mainpackage","c":"PointCounting","l":"flushPoints(Card, Card[], boolean)","url":"flushPoints(mainpackage.Card,mainpackage.Card[],boolean)"},{"p":"mainpackage","c":"PointCounting","l":"flushPoints(int, int[], boolean)","url":"flushPoints(int,int[],boolean)"},{"p":"mainpackage","c":"CombMeths","l":"genCombIter(int[], int)","url":"genCombIter(int[],int)"},{"p":"mainpackage","c":"CCHBunch","l":"getChoice(int)"},{"p":"mainpackage","c":"UnsuitedMeths","l":"getChoiceF6(int[], boolean, float[][])","url":"getChoiceF6(int[],boolean,float[][])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"getChoiceF6(int[], boolean)","url":"getChoiceF6(int[],boolean)"},{"p":"mainpackage","c":"Aragula","l":"getCopy(int[])"},{"p":"mainpackage","c":"Aragula","l":"getCopy(int[][])"},{"p":"mainpackage","c":"Database","l":"getCopyOfSuitedCribData(boolean)"},{"p":"mainpackage","c":"Card","l":"getId()"},{"p":"mainpackage","c":"UnsuitedMeths","l":"getIdx5(int, int[])","url":"getIdx5(int,int[])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"getIdxCode(int[], int)","url":"getIdxCode(int[],int)"},{"p":"mainpackage","c":"Database","l":"getLatestLevel()"},{"p":"mainpackage","c":"Card","l":"getNum()"},{"p":"mainpackage","c":"DataNumbers","l":"getScore5(int)"},{"p":"mainpackage","c":"DataNumbers","l":"getScore5WithoutFlush(int)"},{"p":"mainpackage","c":"CCHBunch","l":"getSize()"},{"p":"mainpackage","c":"Card","l":"getSuit()"},{"p":"mainpackage","c":"CCHBunch","l":"getWeight(int)"},{"p":"mainpackage","c":"UnsuitedMeths","l":"hasCommonElem(int[], int[])","url":"hasCommonElem(int[],int[])"},{"p":"mainpackage","c":"Aragula","l":"idPermArray(int)"},{"p":"mainpackage","c":"Aragula","l":"inverse(int[])"},{"p":"mainpackage","c":"Aragula","l":"inverse(int[][])"},{"p":"mainpackage","c":"CombMeths","l":"iter(int[])"},{"p":"mainpackage","c":"Labels","l":"Labels()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"Database","l":"loadLatestStats()"},{"p":"mainpackage","c":"SmallTests","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"mainpackage","c":"SuitedMeths","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"mainpackage","c":"UserDiscardDecisioning","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"mainpackage","c":"SmallTests","l":"main0()"},{"p":"mainpackage","c":"SuitedMeths","l":"main0()"},{"p":"mainpackage","c":"SmallTests","l":"main1()"},{"p":"mainpackage","c":"SmallTests","l":"main2()"},{"p":"mainpackage","c":"SmallTests","l":"main3()"},{"p":"mainpackage","c":"SmallTests","l":"main4()"},{"p":"mainpackage","c":"SmallTests","l":"main5()"},{"p":"mainpackage","c":"SmallTests","l":"main6()"},{"p":"mainpackage","c":"SmallTests","l":"main7()"},{"p":"mainpackage","c":"Database","l":"megaAnalysis(int)"},{"p":"mainpackage","c":"PointCounting","l":"merge(Card, Card[])","url":"merge(mainpackage.Card,mainpackage.Card[])"},{"p":"mainpackage","c":"PointCounting","l":"merge(int, int[])","url":"merge(int,int[])"},{"p":"mainpackage","c":"Aragula","l":"nbOfInv(int[])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"nbPossOfCardSet(int[])"},{"p":"mainpackage","c":"PointCounting","l":"nobPoints(Card, Card[])","url":"nobPoints(mainpackage.Card,mainpackage.Card[])"},{"p":"mainpackage","c":"PointCounting","l":"nobPoints(int, int[])","url":"nobPoints(int,int[])"},{"p":"mainpackage","c":"NumCombo","l":"NumCombo(int, int[])","url":"%3Cinit%3E(int,int[])"},{"p":"mainpackage","c":"Labels","l":"numEncode(char)"},{"p":"mainpackage","c":"Card","l":"numVal()"},{"p":"mainpackage","c":"PointCounting","l":"pairPoints(Card[])","url":"pairPoints(mainpackage.Card[])"},{"p":"mainpackage","c":"PointCounting","l":"pairPoints(int[])"},{"p":"mainpackage","c":"DataNumbers","l":"pascal(int, int)","url":"pascal(int,int)"},{"p":"mainpackage","c":"PointCounting","l":"PointCounting()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"Aragula","l":"pow(int[], int)","url":"pow(int[],int)"},{"p":"mainpackage","c":"Aragula","l":"pow(int[][], int)","url":"pow(int[][],int)"},{"p":"mainpackage","c":"NumCombo","l":"print()"},{"p":"mainpackage","c":"Labels","l":"print(Card, Card[], int)","url":"print(mainpackage.Card,mainpackage.Card[],int)"},{"p":"mainpackage","c":"Labels","l":"print(Card[])","url":"print(mainpackage.Card[])"},{"p":"mainpackage","c":"SmallTests","l":"print(int[])"},{"p":"mainpackage","c":"SuitedMeths","l":"printDiscardReport(boolean, int[], boolean)","url":"printDiscardReport(boolean,int[],boolean)"},{"p":"mainpackage","c":"SuitedMeths","l":"printDiscardReport(boolean, int[], float[][])","url":"printDiscardReport(boolean,int[],float[][])"},{"p":"mainpackage","c":"SuitedMeths","l":"printDiscardReport(String[])","url":"printDiscardReport(java.lang.String[])"},{"p":"mainpackage","c":"Aragula","l":"printIf(boolean, String)","url":"printIf(boolean,java.lang.String)"},{"p":"mainpackage","c":"SmallTests","l":"println(int[])"},{"p":"mainpackage","c":"Aragula","l":"printlnIf(boolean, String)","url":"printlnIf(boolean,java.lang.String)"},{"p":"mainpackage","c":"DataNumbers","l":"proceed()"},{"p":"mainpackage","c":"Labels","l":"proceed()"},{"p":"mainpackage","c":"Aragula","l":"quickSort(int[], int[])","url":"quickSort(int[],int[])"},{"p":"mainpackage","c":"Aragula","l":"quickSort(int[])"},{"p":"mainpackage","c":"Aragula","l":"quickSort(T[], int[])","url":"quickSort(T[],int[])"},{"p":"mainpackage","c":"Aragula","l":"quickSort(T[])"},{"p":"mainpackage","c":"Aragula","l":"randomPermArray(int)"},{"p":"mainpackage","c":"Aragula","l":"randomPermSetArray(int, int)","url":"randomPermSetArray(int,int)"},{"p":"mainpackage","c":"Aragula","l":"randomSwaps(int[])"},{"p":"mainpackage","c":"Aragula","l":"ranks(int[])"},{"p":"mainpackage","c":"Database","l":"readCribOppFile(int)"},{"p":"mainpackage","c":"Database","l":"readCribSelfFile(int)"},{"p":"mainpackage","c":"Database","l":"readUnsuitedCribOppFile(int)"},{"p":"mainpackage","c":"Database","l":"readUnsuitedCribSelfFile(int)"},{"p":"mainpackage","c":"Aragula","l":"respectCycle(int[], int[])","url":"respectCycle(int[],int[])"},{"p":"mainpackage","c":"Aragula","l":"respectCycles(int[], int[][])","url":"respectCycles(int[],int[][])"},{"p":"mainpackage","c":"Aragula","l":"reverseOrder(int[])"},{"p":"mainpackage","c":"PointCounting","l":"seriePoints(Card[])","url":"seriePoints(mainpackage.Card[])"},{"p":"mainpackage","c":"PointCounting","l":"seriePoints(int[])"},{"p":"mainpackage","c":"Aragula","l":"setTab(boolean[], boolean)","url":"setTab(boolean[],boolean)"},{"p":"mainpackage","c":"Aragula","l":"setTab(int[], int)","url":"setTab(int[],int)"},{"p":"mainpackage","c":"Aragula","l":"sign(int)"},{"p":"mainpackage","c":"SmallTests","l":"SmallTests()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"UnsuitedMeths","l":"sorted(int[])"},{"p":"mainpackage","c":"PointCounting","l":"specialFlush(int, int[], int, int, float)","url":"specialFlush(int,int[],int,int,float)"},{"p":"mainpackage","c":"Card","l":"strNum()"},{"p":"mainpackage","c":"Card","l":"strSuit()"},{"p":"mainpackage","c":"SuitedMeths","l":"SuitedMeths()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"Labels","l":"suitEncode(char)"},{"p":"mainpackage","c":"Card","l":"suitNumToId(int, int)","url":"suitNumToId(int,int)"},{"p":"mainpackage","c":"Aragula","l":"swap(int[], int, int)","url":"swap(int[],int,int)"},{"p":"mainpackage","c":"Aragula","l":"swap(T[], int, int)","url":"swap(T[],int,int)"},{"p":"mainpackage","c":"Aragula","l":"toArrayList(int[])"},{"p":"mainpackage","c":"Aragula","l":"toArrayList(T[])"},{"p":"mainpackage","c":"UnsuitedMeths","l":"tossProbSameSuit(int[], int[], boolean)","url":"tossProbSameSuit(int[],int[],boolean)"},{"p":"mainpackage","c":"CCHBunch","l":"toString()"},{"p":"mainpackage","c":"Card","l":"toString()"},{"p":"mainpackage","c":"CribChoiceHeuri","l":"toString()"},{"p":"mainpackage","c":"CCHBunch","l":"unitarize()"},{"p":"mainpackage","c":"UnsuitedMeths","l":"UnsuitedMeths()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"UserDiscardDecisioning","l":"UserDiscardDecisioning()","url":"%3Cinit%3E()"},{"p":"mainpackage","c":"Labels","l":"verboArr(Card[])","url":"verboArr(mainpackage.Card[])"},{"p":"mainpackage","c":"Labels","l":"verboArr(int[])"},{"p":"mainpackage","c":"Card","l":"verbos()"},{"p":"mainpackage","c":"Labels","l":"verboToIds(String[])","url":"verboToIds(java.lang.String[])"},{"p":"mainpackage","c":"Database","l":"writeCribFile(float[][], boolean, int)","url":"writeCribFile(float[][],boolean,int)"},{"p":"mainpackage","c":"Database","l":"writeCribUnsuitedFile(float[][], boolean, int)","url":"writeCribUnsuitedFile(float[][],boolean,int)"}]